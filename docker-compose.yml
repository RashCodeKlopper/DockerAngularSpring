version: '3'

services:

  database:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_USER: administrator
      POSTGRES_PASSWORD: administrator@123
      POSTGRES_DB: dockerAngularSpringDb
    ports:
      - 5432:5432
    restart: always
    volumes:
     - dockerAngularSpringData:/var/lib/mysql
     - ./data.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
     - backendNetwork
     
  springapi:
    image: openjdk:10-jre-slim
    container_name: springapi
    ports:
      - 8080:8080
    depends_on:
      - database
    volumes:
      - ./Spring/target/spring-0.0.1-SNAPSHOT.jar:/application.jar
    command: ["java", "-jar", "application.jar"]
    networks:
      - backendNetwork
      - frontendNetwork
      
  angular:
    image: nginx:alpine
    container_name: angular
    ports: 
      - 4200:80
    depends_on:
      - springapi
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./Angular8Material/dist/Angular8Material/:/usr/share/nginx/html
    networks:
      - frontendNetwork

volumes:
  dockerAngularSpringData:
  
networks:
  backendNetwork:
  frontendNetwork: